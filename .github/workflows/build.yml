name: Build, Verify, and Publish Executable

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' # Adjust based on your project needs

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build Executable
      run: |
        pyinstaller --onefile --name rl_drop_opener main.py
        mkdir build_artifacts
        move dist/rl_drop_opener.exe build_artifacts/rl_drop_opener.exe

    - name: Generate Checksum
      run: |
        certutil -hashfile build_artifacts/rl_drop_opener.exe SHA256 > build_artifacts/checksum.txt
        echo "Checksum generated."

    - name: Upload Executable and Checksum
      uses: actions/upload-artifact@v4
      with:
        name: precompiled-executable
        path: build_artifacts/

   # Step 3: Determine the Next Version Tag
    - name: Get Latest Tag
      id: get_latest_tag
      uses: actions/github-script@v6
      with:
        script: |
          const tags = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1,
            page: 1
          });
          if (tags.data.length === 0) return "v0.1.0"; // Default for first release
          return tags.data[0].name;
        result-encoding: string


    - name: Increment Tag Version
      id: increment_tag
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.result }}
        prefix="v"
        version=${latest_tag#"$prefix"}
        IFS='.' read -r major minor patch <<< "$version"
        new_version="$prefix$major.$minor.$((patch + 1))"
        echo "new_tag=$new_version" >> $GITHUB_ENV

    - name: Create Release with New Tag
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        automatic_release_tag: ${{ env.new_tag }}
        title: "Release ${{ steps.get_version.outputs.result }}"
        files: |
          build_artifacts/rl_drop_opener.exe
          build_artifacts/checksum.txt
