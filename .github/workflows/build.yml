name: Build, Verify, and Publish Executable

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'

jobs:
  build-and-publish:
    runs-on: windows-latest
    outputs:
      checksum: ${{ steps.checksum.outputs.checksum }}
      tag: ${{ steps.increment_tag.outputs.new_tag }}
      exe_name: ${{ steps.set_exe_name.outputs.exe_name }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Get Latest Tag
      id: get_latest_tag
      uses: actions/github-script@v6
      with:
        script: |
          const tags = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1,
            page: 1
          });
          if (tags.data.length === 0) return "v0.1.0"; // Default for first release
          return tags.data[0].name;
        result-encoding: string

    - name: Increment Tag Version
      id: increment_tag
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.result }}
        prefix="v"
        version=${latest_tag#"$prefix"}
        IFS='.' read -r major minor patch <<< "$version"
        new_version="$prefix$major.$minor.$((patch + 1))"
        echo "::set-output name=new_tag::$new_version"

    - name: Set Executable Name
      id: set_exe_name
      run: |
        exe_name="rl_drop_opener-${{ steps.increment_tag.outputs.new_tag }}-Windows"
        echo "::set-output name=exe_name::$exe_name"

    - name: Build Executable
      run: |
        pyinstaller --onefile --name "${{ steps.set_exe_name.outputs.exe_name }}" main.py
        mkdir build_artifacts
        move dist\"${{ steps.set_exe_name.outputs.exe_name }}".exe build_artifacts\"${{ steps.set_exe_name.outputs.exe_name }}".exe

    - name: Generate SHA256 Checksum
      id: checksum
      run: |
        $checksum = CertUtil -hashfile build_artifacts\"${{ steps.set_exe_name.outputs.exe_name }}".exe SHA256 | Select-String -Pattern "^[A-F0-9]{64}$"
        echo "::set-output name=checksum::$(echo $checksum | sed 's/\r//g')"  # Remove any carriage returns
      shell: pwsh

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build_artifacts/

  release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build_artifacts/

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: build_artifacts/rl_drop_opener.exe
        tag_name: ${{ needs.build-and-publish.outputs.tag }}
        generate_release_notes: true
        body: |
          ## Checksums
          ```text
          "${{ steps.set_exe_name.outputs.exe_name }}".exe `${{ needs.build-and-publish.outputs.checksum }}`
          ```
        token: ${{ secrets.GITHUB_TOKEN }}
